#parse("add-edit-extract.vm")
<template>
    <!-- 添加或修改${basicConfig.modalName}配置对话框 -->
    <el-dialog :close-on-press-escape="false" :close-on-click-modal="false"
               :destroy-on-close="true" v-model="open" :title="title" width="600px" append-to-body @close="cancel">
        <el-form ref="${basicConfig.apiFileName}Ref" :model="addEditForm" label-width="80px">
            #generatFormItemFunc()
        </el-form>
        <template #footer>
            <div class="dialog-footer">
                <el-button type="primary" @click="submitForm">确 定</el-button>
                <el-button @click="cancel">取 消</el-button>
            </div>
        </template>
    </el-dialog>
</template>

<script setup lang='ts'>
import { ElMessage } from 'element-plus'
import {#generalImportReqApiString()} from '@/api/${basicConfig.apiFileName}'
import { useDict } from '@/hooks/use-dict'
import { resetData,reshowData } from '@/hooks/use-common'

/**********props***********/
// const props = defineProps({
//   name: {
//     require: true,
//     default: "fai",
//     type:String,
//   },
// });

/**********ref***********/
const ${basicConfig.apiFileName}Ref = ref()
const open = ref(false)
const title = ref('新增${basicConfig.modalName}')

/**********reactive***********/
const addEditForm = reactive({
    #generalFormKey()
})

/****watch,computed******/

/**********mounted***********/
// eslint-disable-next-line camelcase
const { #generalEnumKey()} = useDict(#generalEnumString())
const formRules = useElement().formRules
//保存历史提交数据
const formString = JSON.stringify(addEditForm)
const emits = defineEmits([])
onMounted(()=>{
  #generalMountedReq()
})
/**********methods***********/
const showModal = (row) => {
    if (row.id) {
        get${basicConfig.apiFileNameFirstCase}(row.id).then(({ data }) => {
            reshowData(addEditForm, data)
            //edit modal
            title.value = '编辑${basicConfig.modalName}'
        })
    }
    title.value = '新增${basicConfig.modalName}'
    open.value = true
}
const submitForm = () => {
    ${basicConfig.apiFileName}Ref.value.validate((valid) => {
        if (valid) {
            if (addEditForm.${basicConfig.apiFileName}Id !== '') {
                update${basicConfig.apiFileNameFirstCase}(addEditForm).then(() => {
                    ElMessage({message: '修改成功', type: 'success'})
                    open.value = false
                    emits('getList')
                })
            } else {
                add${basicConfig.apiFileNameFirstCase}(addEditForm).then(() => {
                    ElMessage({ message: '新增成功', type: 'success' })
                    open.value = false
                    emits('getList')
                })
            }
        }
    })
}

/*******request*******/
#generalFormReq()
/*******get,set,reset,clear*******/
//取消按钮
const cancel = () => {
    open.value = false
    resetData(addEditForm, formString)
}
/******defineExpose*******/
defineExpose({ cancel, showModal })
</script>

<style scoped lang="scss"></style>
